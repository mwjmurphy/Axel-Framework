<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://www.xmlactions.org/bean_to_xml"
	xmlns="http://www.xmlactions.org/bean_to_xml" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	attributeFormDefault="unqualified" elementFormDefault="qualified"
	version="1.3">
	
	<xsd:element name="bean_to_xml">
		<xsd:annotation>
			<xsd:documentation>
			The root element for all bean to xml mapping.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:element ref="bean" minOccurs="0" />
				<xsd:element ref="populator" minOccurs="0" />
				<xsd:element ref="namespace" minOccurs="0" />
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="bean">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
			A bean defines the properties of a class included in the xml mapping. 
			]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice maxOccurs="unbounded">
				<xsd:element ref="attribute" minOccurs="0" />
				<xsd:element ref="element" minOccurs="0" />
			</xsd:choice>
			<xsd:attribute name="id" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The Bean Identifier. This is used when a bean references another bean.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="clas" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The name of the Java Class that this bean represents.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The xml element that will be created from this bean.
					</xsd:documentation>
					<xsd:documentation>
						This is an optional attribute, if not used then the id
						attribute will be used instead.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
            <xsd:attribute name="prefix" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Use as a namespace prefix, prepended to the name when
                        creating the element name.
                    </xsd:documentation>
                    <xsd:documentation>
                        Note that an assumption is not made to place the
                        ':' character between the prefix and name. This
                        must be included with the prefix if required.                        
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="attribute">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
            Definition of a bean xml attribute 
            ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="property" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						This is the name of the bean property that this attribute
						references.
					</xsd:documentation>
                    <xsd:documentation>
                        If the name property is not set this value will be used instead as the attribute name.
                    </xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of the xml attribute that will be created.
					</xsd:documentation>
					<xsd:documentation>
						This is an optional attribute, if not used then the property value is used instead.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
            <xsd:attribute name="populator" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        A String representation of a Java class that is used to populate
                        the xml from the bean property.
                    </xsd:documentation>
                    <xsd:documentation>
                        Used when a property to xml needs to be formatted or handled as a list,
                        timestamp, date etc.                   
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="prefix" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        Use as a namespace prefix, prepended to the name when
                        creating the attribute name.
                    </xsd:documentation>
                    <xsd:documentation>
                        Note that an assumption is not made to place the
                        ':' character between the prefix and name. This
                        must be included with the prefix if required.                        
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="populator_ref" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        A reference to a populator.
                    </xsd:documentation>
                    <xsd:documentation>
                        Used when a property to xml needs to be formatted or handled as a list,
                        timestamp, date etc.                   
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<xsd:element name="element">
		<xsd:annotation>
			<xsd:documentation><![CDATA[
            Definition of a bean child element. 
            ]]></xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:attribute name="property" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						This is the name of the property in the class that this
						element is created from.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="bean_ref" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						This is the id of the bean that this element references.
					</xsd:documentation>
					<xsd:documentation>
						If this is not set a default populator may be used that matches the property
						type. Examples would be a String Array or a List.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="name" type="xsd:string" use="optional">
				<xsd:annotation>
					<xsd:documentation>
						The name of xml element that is created from this bean.
					</xsd:documentation>
					<xsd:documentation>
						This is an optional attribute, if not used then the property
						attribute will be used instead.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
            <xsd:attribute name="populator" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        A String representation of a Java class that is used to populate
                        the xml from the bean property.
                    </xsd:documentation>
                    <xsd:documentation>
                        Used when a property to xml needs to be formatted or handled as a list,
                        timestamp, date etc.                   
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="populator_ref" type="xsd:string" use="optional">
                <xsd:annotation>
                    <xsd:documentation>
                        A reference to a populator.
                    </xsd:documentation>
                    <xsd:documentation>
                        Used when a property to xml needs to be formatted or handled as a list,
                        timestamp, date etc.                   
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
		</xsd:complexType>
	</xsd:element>

    <xsd:element name="populator">
        <xsd:annotation>
            <xsd:documentation>
                A populator is used to set the derived bean property in the xml.
                Used when the object to be set in the xml is stored into a list, a
                date, a timestamp etc.
            </xsd:documentation>
            <xsd:documentation>
                A set of populators are delivered with the product, but additional
                ones may be created and referenced from the configuration once they
                are set in the java classpath.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:choice maxOccurs="unbounded">
                <xsd:element ref="keyvalue" minOccurs="0" />
            </xsd:choice>
            <xsd:attribute name="id" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The reference identifier for this populater. Referenced from
                        the property populator_ref attribute.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
			<xsd:attribute name="clas" type="xsd:string" use="required">
				<xsd:annotation>
					<xsd:documentation>
						The name of the Java Class that performs the population.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="keyvalue">
        <xsd:annotation>
            <xsd:documentation>
                A keyvalue is used to store parameters for
                populators.
            </xsd:documentation>
            <xsd:documentation>
                Example. when setting a timestamp or a date the
                format of the
                date may be set using key="time_format"
                value="yyyy-MM-dd HH:mm:ss.SSS"
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="key" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The key to identifying this keyvalue
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="value" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The value for the key.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="namespace">
        <xsd:annotation>
            <xsd:documentation>
                When we want to add namespace identifiers to the output xml.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="prefix" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The namespace prefix.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="uri" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        The namespace identifier.
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

</xsd:schema>