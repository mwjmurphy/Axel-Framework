<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <!-- M.M. All execution contexts are derived from this. -->
    <bean id="pager.execContext" name="pager.execContext" class="org.xmlactions.pager.context.SessionExecContext"
        scope="request">
        <qualifier value="pager.execContext" />
        <constructor-arg>
            <!-- "actionMaps" -->
            <list>
                <util:properties location="classpath:config/pager/actions.properties" />
                <util:properties location="classpath:config/pager/sample_actions.properties" />
                <util:properties>
                    <prop key="code_get_items_list">org.xmlactions.action.DirectAjaxCodeCallAction</prop>
                </util:properties>
            </list>
        </constructor-arg>
        <constructor-arg>
            <!-- "localMaps" -->
            <list>
                <!-- <ref bean="application.xml" /> -->
                <util:properties location="classpath:config/project/web.properties" />
                <util:properties location="classpath:config/project/breadcrumbs.properties" />
                <!--<util:properties location="classpath:themes/snippets/html_snippets.properties"/> -->
            </list>
        </constructor-arg>

        <constructor-arg>
            <!-- "themes" -->
            <util:list>
                <ref bean="jqueryTheme" />
            </util:list>
        </constructor-arg>
    </bean>

    <bean id="jqueryTheme" class="org.xmlactions.common.theme.Theme">
        <constructor-arg>
            <util:properties location="classpath:themes/jquery.properties" />
        </constructor-arg>
    </bean>

    <!-- Setup a DBDataSource that will provide a Database Connection -->
    <bean id="dbDataSource" class="org.xmlactions.db.DBConnector" scope="singleton">
        <property name="initContextLookup" value="java:/comp/env" />
        <property name="dataSourceReferenceName" value="jdbc/MySQLDB" />
    </bean>

    <!-- Setup a database connector -->
    <bean id="mysqlDataSource_test" class="org.xmlactions.db.DBConnector" scope="singleton">
        <property name="driver" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/test" />
        <property name="username" value="test" />
        <property name="password" value="test" />
    </bean>

    <!-- StorageContainer containing our storage definitions -->
    <bean id="storageContainer" class="org.xmlactions.db.StorageContainer" scope="singleton">
        <constructor-arg type="java.lang.String" value="/org/xmlactions/db/test/mysql/test_db.xml" />
        <constructor-arg type="java.lang.String" value="/config/pager/actions_db.properties" />
    </bean>

    <!-- Link our connection with the database configuration and the database name and the database type -->
    <bean id="storageConfig" class="org.xmlactions.db.config.StorageConfig" scope="singleton">
        <property name="dbConnector" ref="mysqlDataSource_test" />
        <property name="storageContainer" ref="storageContainer" />
        <property name="databaseName" value="test" />
        <property name="sqlBuilder" ref="sqlBuilder" />
        <property name="dbSpecificName" value="mysql" />
    </bean>

    <!-- Apply the correct sql builder for the database. -->
    <bean id="sqlBuilder" class="org.xmlactions.db.sql.mysql.MySqlSelectQuery" scope="singleton" />

</beans>